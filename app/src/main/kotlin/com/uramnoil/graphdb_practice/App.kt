/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.uramnoil.graphdb_practice

import org.neo4j.driver.AuthToken
import org.neo4j.driver.AuthTokens
import org.neo4j.driver.GraphDatabase
import org.neo4j.driver.Query
import org.neo4j.driver.Values.parameters
import java.net.URI

fun main() {
    val driver = GraphDatabase.driver(URI("bolt://localhost:7687"), AuthTokens.basic("neo4j", "test"))
    val session = driver.session()
    session.use {
        it.executeWrite { tc ->
            val query = Query(
                """
                    CREATE
                        (player1: Player { name: ${'$'}name1 }),
                        (player2: Player { name: ${'$'}name2 })
                    CREATE (player1)-[:FRIEND]->(player2)
                    CREATE (player2)-[:FRIEND]->(player1)
                """.trimMargin(),
                parameters("name1", "UramnOIL", "name2", "Elon Musk")
            )
            tc.run(query)
        }

        // UramnOILにフォローされているプレイヤーを検索する
        val result = it.executeRead { tc ->
            val query = Query(
                """
                    MATCH (follower: Player { name: ${'$'}follower }),
                          (followee: Player)
                    MATCH (follower)-[:FRIEND]->(followee)
                    RETURN followee
                """.trimIndent(),
                parameters("follower", "UramnOIL")
            )
            val result = tc.run(query)
            result.list()
        }
        result.forEach { record ->
            println(record["followee"]["name"])
        }
    }
}
